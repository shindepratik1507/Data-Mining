Consider following dataset
weather=['Sunny','Sunny','Overcast','Rainy','Rainy','Rainy','Overcast','Sunny','Sunny','Rainy','Sunn
y','Overcast','Overcast','Rainy']
temp=['Hot','Hot','Hot','Mild','Cool','Cool','Cool','Mild','Cool','Mild','Mild','Mild','Hot','Mild']
play=['No','No','Yes','Yes','Yes','No','Yes','No','Yes','Yes','Yes','Yes','Yes','No'].
Use NaÃ¯ve Bayes algorithm to predict [0: Overcast, 2: Mild]tuple belongs to which class
whether to play the sports or not.



import numpy as np
from sklearn.preprocessing import LabelEncoder
from sklearn.naive_bayes import CategoricalNB

# Given dataset
weather = ['Sunny', 'Sunny', 'Overcast', 'Rainy', 'Rainy', 'Rainy', 'Overcast', 'Sunny',
           'Sunny', 'Rainy', 'Sunny', 'Overcast', 'Overcast', 'Rainy']
temp = ['Hot', 'Hot', 'Hot', 'Mild', 'Cool', 'Cool', 'Cool', 'Mild', 'Cool', 'Mild', 
        'Mild', 'Mild', 'Hot', 'Mild']
play = ['No', 'No', 'Yes', 'Yes', 'Yes', 'No', 'Yes', 'No', 'Yes', 'Yes', 'Yes', 'Yes', 'Yes', 'No']

# Step 1: Convert categorical data to numerical values using LabelEncoder
label_encoder_weather = LabelEncoder()
label_encoder_temp = LabelEncoder()
label_encoder_play = LabelEncoder()

weather_encoded = label_encoder_weather.fit_transform(weather)
temp_encoded = label_encoder_temp.fit_transform(temp)
play_encoded = label_encoder_play.fit_transform(play)

# Step 2: Combine the weather and temp into a single feature set
features = np.array(list(zip(weather_encoded, temp_encoded)))

# Step 3: Train the Naive Bayes model
model = CategoricalNB()
model.fit(features, play_encoded)

# Step 4: Make a prediction for [Overcast, Mild] = [0, 2]
# We need to encode Overcast and Mild similarly to match the training data encoding
encoded_input = np.array([[0, 2]])  # Overcast -> 0, Mild -> 2

# Step 5: Predict whether to play or not (output will be 0 or 1)
predicted_play = model.predict(encoded_input)

# Decode the result back to 'Yes' or 'No'
result = label_encoder_play.inverse_transform(predicted_play)

print(f"Prediction for [Overcast, Mild]: {result[0]}")
