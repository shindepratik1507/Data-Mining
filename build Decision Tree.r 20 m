Write a Python program build Decision Tree Classifier using Scikit- learn package for
diabetes data set (download database from https://www.kaggle.com/uciml/pima-
indians-diabetes-database)



import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier
from sklearn.metrics import accuracy_score, confusion_matrix, classification_report
from sklearn import tree
import matplotlib.pyplot as plt

# Step 1: Load the dataset (replace the path with your downloaded dataset path)
data = pd.read_csv('diabetes.csv')

# Step 2: Check the data (optional)
print(data.head())

# Step 3: Split the dataset into features (X) and target (y)
X = data.drop('Outcome', axis=1)  # All features except the target column 'Outcome'
y = data['Outcome']  # Target column 'Outcome'

# Step 4: Split data into training and testing sets (70% training, 30% testing)
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)

# Step 5: Initialize and train the Decision Tree Classifier
model = DecisionTreeClassifier(random_state=42)
model.fit(X_train, y_train)

# Step 6: Make predictions on the test data
y_pred = model.predict(X_test)

# Step 7: Evaluate the model
accuracy = accuracy_score(y_test, y_pred)
print(f"Accuracy: {accuracy * 100:.2f}%")

# Confusion Matrix and Classification Report
conf_matrix = confusion_matrix(y_test, y_pred)
class_report = classification_report(y_test, y_pred)

print("Confusion Matrix:")
print(conf_matrix)
print("\nClassification Report:")
print(class_report)

# Step 8: Visualize the Decision Tree (optional)
plt.figure(figsize=(20,10))
tree.plot_tree(model, feature_names=X.columns, class_names=['No Diabetes', 'Diabetes'], filled=True)
plt.show()