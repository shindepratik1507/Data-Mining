Write a Python program build Decision Tree Classifier using Scikit-learnpackage for
diabetes data set (download database from https://www.kaggle.com/uciml/pima-indians-
diabetes-database)



import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier
from sklearn.metrics import accuracy_score, precision_score, recall_score, confusion_matrix

# Step 1: Load the dataset (Assuming you've downloaded it from Kaggle and placed it in the same folder)
# Update the path to where you have saved the 'diabetes.csv' file
file_path = 'diabetes.csv'
data = pd.read_csv(file_path)

# Step 2: Preprocess the data (Check if there are missing values, etc.)
print("Dataset Head:")
print(data.head())

# Separate features and target variable
X = data.drop('Outcome', axis=1)  # Features (all columns except 'Outcome')
y = data['Outcome']  # Target (the 'Outcome' column)

# Step 3: Split the dataset into training and test sets (80% training, 20% testing)
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Step 4: Build the Decision Tree Classifier
model = DecisionTreeClassifier(random_state=42)
model.fit(X_train, y_train)

# Step 5: Make predictions
y_pred = model.predict(X_test)

# Step 6: Evaluate the model
accuracy = accuracy_score(y_test, y_pred)
precision = precision_score(y_test, y_pred)
recall = recall_score(y_test, y_pred)
conf_matrix = confusion_matrix(y_test, y_pred)

# Display the evaluation metrics
print(f"\nAccuracy: {accuracy:.2f}")
print(f"Precision: {precision:.2f}")
print(f"Recall: {recall:.2f}")
print("\nConfusion Matrix:")
print(conf_matrix)