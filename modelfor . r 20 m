Write a python program to implement multiple Linear Regression modelfor a car dataset.
Dataset can be downloaded from:
https://www.w3schools.com/python/python_ml_multiple_regression.asp




import pandas as pd
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error, r2_score
import matplotlib.pyplot as plt

# Step 1: Load the dataset
url = "https://www.w3schools.com/python/car_data.csv"
df = pd.read_csv(url)

# Step 2: Display the top rows of the dataset
print("First 5 rows of the dataset:")
print(df.head())

# Step 3: Define features (X) and target (y)
X = df[['Weight', 'Volume']]  # Independent variables (predictors)
y = df['CO2']  # Dependent variable (target)

# Step 4: Split the data into training and testing sets (80% train, 20% test)
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Step 5: Build and train the Multiple Linear Regression model
model = LinearRegression()
model.fit(X_train, y_train)

# Step 6: Get the coefficients (b1, b2) and intercept (b0)
intercept = model.intercept_
coefficients = model.coef_

print(f"\nIntercept (b0): {intercept}")
print(f"Coefficients (b1, b2): {coefficients}")

# Step 7: Predict CO2 emissions using the test set
y_pred = model.predict(X_test)

# Step 8: Evaluate the performance of the model
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print(f"\nMean Squared Error: {mse}")
print(f"R-squared: {r2}")

# Step 9: Plot the predicted CO2 vs actual CO2 for test data
plt.figure(figsize=(10, 6))
plt.scatter(y_test, y_pred, color='blue')
plt.plot([y_test.min(), y_test.max()], [y_test.min(), y_test.max()], color='red', lw=2)
plt.title('Actual CO2 vs Predicted CO2')
plt.xlabel('Actual CO2')
plt.ylabel('Predicted CO2')
plt.grid(True)
plt.show()